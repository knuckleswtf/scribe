function tryItOut(e){if(document.querySelector(`#btn-tryout-${e}`).hidden=!0,document.querySelector(`#btn-executetryout-${e}`).hidden=!1,document.querySelector(`#btn-canceltryout-${e}`).hidden=!1,document.querySelectorAll(`input[data-endpoint=${e}],label[data-endpoint=${e}]`).forEach((e=>e.hidden=!1)),"1"===document.querySelector(`#form-${e}`).dataset.authed){const t=document.querySelector(`#auth-${e}`);t&&(t.hidden=!1)}document.querySelectorAll(`#form-${e} details`).forEach((e=>e.open=!0))}function cancelTryOut(e){window.abortControllers[e]&&(window.abortControllers[e].abort(),delete window.abortControllers[e]),document.querySelector(`#btn-tryout-${e}`).hidden=!1;const t=document.querySelector(`#btn-executetryout-${e}`);t.hidden=!0,t.textContent="Send Request ≡ƒÆÑ",document.querySelector(`#btn-canceltryout-${e}`).hidden=!0,document.querySelectorAll(`input[data-endpoint=${e}],label[data-endpoint=${e}]`).forEach((e=>e.hidden=!0)),document.querySelectorAll(`#form-${e} details`).forEach((e=>e.open=!1));const o=document.querySelector(`#auth-${e}`);o&&(o.hidden=!0),document.querySelector("#execution-results-"+e).hidden=!0,document.querySelector("#execution-error-"+e).hidden=!0,document.querySelector("#example-requests-"+e).hidden=!1,document.querySelector("#example-responses-"+e).hidden=!1}function makeAPICall(e,t,o,n,r,c){console.log({endpointId:c,path:t,body:o,query:n,headers:r}),o instanceof FormData||(o=JSON.stringify(o));const a=new URL(window.baseUrl+"/"+t.replace(/^\//,""));function l(e,t,o){Array.isArray(t)?t.forEach(((t,n)=>{l(e+"["+n+"]",t,o)})):"object"==typeof t&&null!==t?Object.keys(t).forEach((n=>{l(e+"["+n+"]",t[n],o)})):o.append(e,t)}return Object.keys(n).forEach((e=>l(e,n[e],a.searchParams))),window.abortControllers[c]=new AbortController,fetch(a,{method:e,headers:r,body:"GET"===e?void 0:o,signal:window.abortControllers[c].signal}).then((e=>Promise.all([e.status,e.text(),e.headers])))}function hideCodeSamples(e){document.querySelector("#example-requests-"+e).hidden=!0,document.querySelector("#example-responses-"+e).hidden=!0}function handleResponse(e,t,o,n){hideCodeSamples(e),document.querySelector("#execution-error-"+e).hidden=!0;const r=document.querySelector("#execution-response-content-"+e);let c=!1;try{const e=JSON.parse(t);null!==e&&(c=!0,t=JSON.stringify(e,null,4))}catch(e){}r.textContent=""===t?"<Empty response>":t,c&&window.hljs.highlightBlock(r);const a=document.querySelector("#execution-response-status-"+e);a.textContent=` (${o})`,document.querySelector("#execution-results-"+e).hidden=!1,a.scrollIntoView({behavior:"smooth",block:"center"})}function handleError(e,t){hideCodeSamples(e),document.querySelector("#execution-results-"+e).hidden=!0;let o=t.message||t;o+="\n\nTip: Check that you're properly connected to the network.",o+="\nIf you're a maintainer of ths API, verify that your API is running and you've enabled CORS.",o+="\nYou can check the Dev Tools console for debugging information.",document.querySelector("#execution-error-message-"+e).textContent=o;const n=document.querySelector("#execution-error-"+e);n.hidden=!1,n.scrollIntoView({behavior:"smooth",block:"center"})}async function executeTryOut(e,t){const o=document.querySelector(`#btn-executetryout-${e}`);let n,r;o.textContent="ΓÅ▒ Sending...",o.scrollIntoView({behavior:"smooth",block:"center"}),"1"===t.dataset.hasfiles?(n=new FormData,r=(e,t)=>n.append(e,t)):"1"===t.dataset.isarraybody?(n=[],r=(e,t)=>_.set(n,e,t)):(n={},r=(e,t)=>_.set(n,e,t));t.querySelectorAll("input[data-component=body]").forEach((e=>{let t=e.value;if("file"===e.type&&e.files[0])r(e.name,e.files[0]);else if("radio"===e.type)e.checked&&(t="false"!==t,r(e.name,t));else{if(""===t&&!1===e.required)return;r(e.name,t)}}));const c={};t.querySelectorAll("input[data-component=query]").forEach((e=>_.set(c,e.name,e.value)));let a=t.dataset.path;t.querySelectorAll("input[data-component=url]").forEach((e=>a=a.replace(new RegExp(`\\{${e.name}\\??}`),e.value)));const l=JSON.parse(t.dataset.headers);if("1"===t.dataset.authed){const e=t.querySelector("input[data-component=header]");e&&(l[e.name]=e.dataset.prefix+e.value)}let d=t.dataset.method;n instanceof FormData&&(delete l["Content-Type"],["PUT","PATCH"].includes(t.dataset.method)&&(d="POST",r("_method",t.dataset.method))),makeAPICall(d,a,n,c,l,e).then((([t,o,n])=>{handleResponse(e,o,t,n)})).catch((t=>{"AbortError"!==t.name?(console.log("Error while making request: ",t),handleError(e,t)):console.log("Request cancelled")})).finally((()=>{o.textContent="Send Request ≡ƒÆÑ"}))}window.abortControllers={};
